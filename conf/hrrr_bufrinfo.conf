# ==============================================================================================
#  BUFR data set information file for bufr_gruven.pl - RAR/NWS July 2016
# ==============================================================================================
#
#  This file contains the default settings for a supported data set that is used to download 
#  and process BUFR data with the bufr_gruven.pl routine. Edit this file at your own peril.
#  Should you decide to mangle its contents simply copy an existing bufrinfo.conf file and
#  reconfigure it for your data set.
#
#  All the parameters below are necessary for your happiness and well-being.
#
# ==============================================================================================
# ==============================================================================================
#

#  INFO    
#
#     INFO is just basic information about the this BUFR file data set; simple and sweet.
#
INFO      = 3km Operational HRRR Model BUFR files - hourly temporal resolution


#  MODEL
#
#     MODEL specifies the string used in naming the final BUFKIT file and is used to replace
#     the MOD placeholder.
#
MODEL     = hrrr


#  CYCLES  
#
#     CYCLES is a list of cycle hours (UTC) for which BUFR files are generated from operational
#     model runs. The standard format for CYCLES is:
#
#       CYCLES = CYCLE 1,CYCLE 2,...,CYCLE N
#
#     Where each cycle time (UTC) is separated by a comma (,). For example:
#
#     Example: CYCLES = 00,06,12,18
#
CYCLES  = 00,01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23


#  DELAY
#
#     DELAY represents the number of hours following a cycle time, after which the BUFR are 
#     are available for downloading from a remote server. In most cases, a lag exists from the 
#     time that an operational model is initialized to when the run is completed and the processed
#     data are available. For example, if DELAY = 2, then bufr_gruven.pl will not look for the 12Z
#     cycle run files until after 14Z. The 06Z cycle would be used as the current cycle (default)
#     between 8 and 14Z. This behavior can be overridden with the --nodelay flag.
#
#     Note that if you set the value too low then you will be requesting data before the files
#     are available, which is not good.
#
#     Example: DELAY = 02
#
DELAY = 01


#  SERVER-METHOD
#
#     SERVER-METHOD = SERVER ID:/directory location of data on server/filename convention
#
#     SERVER-METHOD specifies the server and method used to obtain BUFR files, the location 
#     of the files along with the filenames, joined by a colon (:).
#
#     The SERVER ID must have a corresponding IP/hostname defined in the SERVER section of
#     the bufrgruven.conf configuration file. 
#
#     The following placeholders are available and will be replaced with the correct values
#     in bufr_gruven.pl:
#
#       YYYY  - 4 digit year
#       YY    - 2 digit year
#       MM    - 2 digit month
#       DD    - 2 digit day
#       DDD   - 3 digit Julian day (1 .. 366)
#       CC    - Model cycle hour
#       STNM  - BUFR station number - Usually 6-digit
#       MOD   - The name from MODEL above
#       MEMBER- The ensemble member name from MEMBER-KEYS above
#
#     METHOD indicates the method to use to acquire the data. Currently, ftp, http, and (s)cp are
#     supported and identified by SERVER-FTP, SERVER-HTTP, SERVER-HTTPS, and SERVER-NFS respectively.
#
#     Examples: SERVER-FTP   = NCEP:/data/nccf/nam/nam.YYYYMMDD/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#               SERVER-HTTP  = STRC:/data/bufr/YYYYMMDD/nam/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#               SERVER-HTTPS = NOMADS:/data/bufr/YYYYMMDD/nam/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#               SERVER-NFS   = KIELBASA:/ftp/archive/bufr/YYYYMMDD/nam/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#
#     In the first example, NCEP is the ID of the ftp server and has a corresponding NCEP = <hostname|IP>
#     entry in bufrgruven.conf. The files are located in the /data/nam/nam.YYYYMMDD/bufr.tCCz directory
#     on the NCEP server with a bufr.STNM.YYYYMMDDCC naming convention.
#
#     File as having suffixes ".gz", ".bz2", or ".bz2" will be unpacked following acquisition. If you 
#     are downloading compressed files then make sure you include the appropriate suffix for files
#     on the remote host but remove the suffix from the LOCFIL setting.
#
#     In the second example above, STRC is the ID of the http server and has a corresponding
#     STRC = <hostname|IP>  entry in bufrgruven.conf. 
#
#     * NFS USERS *
#
#     The SERVER-NFS example above, KIELBASA is the server ID of the system where the data reside
#     and there is a corresponding KIELBASA = <hostname> entry in the bufrgruven.conf file. Unlike the
#     FTP and HTTP options, either the SERVER ID or actual hostname ([user@]<hostname>:) may be used
#     to identify the server. If the [user@]<hostname> is specified in the "SERVER-NFS =" line then
#     there does not need to be a bufrgruven.conf entry.
#
#     IMPORTANT! - the bufr_gruven.pl script uses secure copy (scp) to access the data on those servers
#                  identified by either the SERVER ID or actual hostname ([user@]<hostname>), so you
#                  MUST have passwordless ssh configured between the machine running bufr_gruven.pl and
#                  the remote host.
#
#     But what if your data reside on the same machine as bufr_gruven.pl and you don't want to use scp?
#     In that case set the SERVER ID to "LOCAL" or leave blank:
#
#       SERVER-NFS  = LOCAL:/data/archive/YYYYMMDD/nam/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#     or
#       SERVER-NFS  = /data/archive/YYYYMMDD/nam/bufr.tCCz/bufr.STNM.YYYYMMDDCC
#
#     in which case bufr_gruven.pl will use the standard copy command (cp) to access the requested file
#     on a locally-mounted partition.
#
SERVER-HTTPS = FTPPRD:/data/nccf/com/hrrr/prod/hrrr.YYYYMMDD/conus/bufrsnd.tCCz/bufr.STNM.YYYYMMDDCC
SERVER-HTTPS = NCEPWWW:/data/nccf/com/hrrr/prod/hrrr.YYYYMMDD/conus/bufrsnd.tCCz/bufr.STNM.YYYYMMDDCC
SERVER-HTTPS = NOMADS:/pub/data/nccf/com/hrrr/prod/hrrr.YYYYMMDD/conus/bufrsnd.tCCz/bufr.STNM.YYYYMMDDCC


#  From the fine family of EMS servers
#
SERVER-HTTPS = EMS1:/data/bufr/YYYYMM/YYYYMMDD/hrrr/bufr.tCCz/bufr.STNM.YYYYMMDDCC
SERVER-HTTPS = EMS2:/data/bufr/YYYYMM/YYYYMMDD/hrrr/bufr.tCCz/bufr.STNM.YYYYMMDDCC
SERVER-HTTPS = EMS3:/data/bufr/YYYYMM/YYYYMMDD/hrrr/bufr.tCCz/bufr.STNM.YYYYMMDDCC


#     The following monolithic file will be downloaded and processed if the "--monolithic" flag
#     is passed to bufr_gruven.pl. The monolithic file contains the ENTIRE set of BUFR stations 
#     in a single file. The file may either be a tarred and compressed collection of individual
#     BUFR files (*.bufrsnd.tar.gz), or a single BUFR file containing multiple stations
#     (*.class1.bufr.tm00).  Bgruven doesn't care and neither should you.
#    
#     However, because all the stations are in a single file, they must be processed together,
#     which takes more time than requesting the single station BUFR files.  Also, should you
#     want to process any additional stations from a previously downloaded monolithic BUFR
#     file, you will have to include the --forcep flag, which tells Bgruven to use the
#     existing file on the local system.
#     
SERVER-HTTPS = NOMADS:/pub/data/nccf/com/hrrr/prod/hrrr.YYYYMMDD/conus/hrrr.tCCz.bufrsnd.tar.gz 


#  LOCFIL
# 
#     LOCFIL is the file naming convention to be used for files downloaded to the local system.  
#     This filename is usually the same as that on the remote server; but hey, you have the power.
#     The primary purpose for this parameter is so filenames on the local machine do not change
#     when failing over to a different remote system, which may not use the same filenames.
#
#     The local filename use the same YYYY, YY, MM, DD, CC, STNM, MOD, and MEMBER place holders as
#     the SERVER-METHOD field above.
#
#     NOTE:  If this is an ensemble product then use MEMBER rather then MOD; otherwise the BUFR files
#            will be overwritten.
#
#     Example: LOCFIL = bufr.STNM.YYYYMMDDCC  or  MEMBER.STNM.YYYYMMDDCC
#
#     If you do pass the --monolithic flag then the value of LOCFIL below will be overridden and
#     a file name convention of YYYYMMDDCC.MOD.tCCz.class1.bufr will be used.
#
LOCFIL   = hrrr.STNM.YYYYMMDDCC


#   EXPORT_[BUFR|GEMPAK|ASCII|BUFKIT|BUFKITP]
#
#     EXPORT_[BUFR|GEMPAK|ASCII|BUFKIT|BUFKITP] specifies the locations to export the  processed 
#     BUFR, GEMPAK, ASCII and BUFKIT files respectively. All files are initially reside beneath
#     the default METDAT directory defined in bufrgruven.conf, but may be moved to other systems
#     or directories by using this option. Note that each time you run bufr_gruven.pl the files
#     beneath METDAT are typically deleted so moving them to another location is a good idea
#     want to save the data.
#
#     The difference between BUFKIT and BUFKITP is that BUFKIT is used for managing the 
#     bufkit files without the YYMMDDCC appended to it, so the files names will appear as
#     "<data set>_stid.buf". The BUFKITP option is used to move the bufkit files WITH the 
#     YYMMDDCC included in the filename, i.e., YYMMDDCC.<data set>_stid.buf.
#
#     File transfer can be done via FTP, Secure FTP (SFTP), COPY (CP), or Secure copy (SCP).
#     You must have your system correctly configured to use these methods.
#
#     The method, destination, and directory are specified as:
#
#         EXPORT_[BUFR|GEMPAK|ASCII|BUFKIT|BUFKITP] = METHOD | [USER@]HOSTNAME | LOCATION 
#
#     Where:
#
#         METHOD             Can be FTP, SFTP, CP, or SCP. If elect to use the copy (CP) command then
#                            the HOSTNAME will be ignored.
#
#         HOSTNAME           If this field is blank, then the copy (cp) command will be used to transfer
#                            files; otherwise, secure copy (scp) will be used.  Is the user (optional) 
#                            and hostname or IP address of your target system. An alternate username is
#                            specified as USER@HOSTNAME (roz@hostname).
#
#                            If secure ftp SFTP is selected then you must have passwordless ssh configured
#                            on your system. If you can manually sftp to a machine 
#
#                            If FTP is chosen as the method then you must have a valid .netrc file.
#                            
#
#         LOCATION           Defines the directory naming convention of the files on the target system.
#                            Note that you may use the place holders described in SERVER-METHOD for the
#                            LOCATION string.
#
#         Example: EXPORT_BUFR   = COPY | | /usr1/data/archive/YYYYMMDDCC/bufr
#     or
#         Example: EXPORT_GEMPAK = SCP  | user@hostname | /usr1/data/archive/YYYYMMDDCC/gempak
#     or
#         Example: EXPORT_BUFKIT = CP   | | /usr1/data/archive/YYYYMMDDCC/bufkit
#     or
#         Example: EXPORT_GEMPAK = FTP  | hostname | /usr1/data/archive/YYYYMMDDCC/gempak
#     or
#         Example: EXPORT_ASCII  = SFTP | user@hostname | /usr1/data/archive/YYYYMMDDCC/bufkit
#
#     You may have multiple entries of a single method or multiple methods for any data type. If you would 
#     like to FTP and SCP BUFKIT files to 37 servers then go for it. Simply specify each entry below. 
#     For example:
#
#       EXPORT_BUFKIT = COPY |          | /data/gempak/YYYYMMDDCC/bufkit
#       EXPORT_BUFKITP= COPY |          | /data/gempak/YYYYMMDDCC/bufkit
#       EXPORT_BUFKIT = SFTP | server1  | /data/bufkit
#       EXPORT_BUFKIT = FTP  | server2  | /local/data/bufkit
#       EXPORT_BUFKIT = FTP  | server37 | /usr1/data/bufkit
#       EXPORT_BUFKITP= FTP  | server37 | /usr1/data/bufkit
#
#     A few of final comments:
#
#                   1. The FTP and SFTP may fail if required to create a directory on the remote system.
#                   2. You need to have passwordless ssh configured correctly between the machine running
#                      Bufrgruven and the remote server for SCP and SFTP to work correctly.
#                   3. EXPORT_BUFKITP and EXPORT_BUFKIT is used for the filenames with and without the YYMMDDCC respectively.
#
#EXPORT_BUFR   = CP |  | /data/metdat/YYYYMMDDCC/bufr
#EXPORT_GEMPAK = ftp | | /data/metdat/YYYYMMDDCC/gempak
#EXPORT_BUFKIT = CP | | /data/metdat/YYYYMMDDCC/bufkit
#EXPORT_ASCII  = CP | | /data/metdat/YYYYMMDDCC/ascii


#  STNTBL
#
#     STNTBL is the station table to use when downloading and processing the BUFR files. All station
#     table files are located in the tables directory.
#
#     Example: STNTBL = nam_bufrstations.txt
#
STNTBL = hrrr_bufrstations.txt


#  SFPACK, SNPACK, SFCAUX, and TIMSTN
#
#     SFPACK is the name of surface packing file to use when unpacking the raw bufr file and writing it
#     to a gempak file. Files are located in the gempak/tables/pack directory.
#
#     SNPACK is the name of sounding packing file to use when unpacking the raw bufr file and writing it
#     to a gempak file. Files are located in the gempak/tables/pack directory.
#
#     SFCAUX is the name of the auxiliary sounding packing file to use when unpacking the raw bufr file 
#     and writing it to a gempak file. Files are located in the gempak/tables/pack directory.
#
SNPACK  = sn_hrrr.prm
SFPACK  = sf_hrrr.prm
SFCAUX  = hrrr_bufkt.pack
TIMSTN  = 49/501
